# iMona/dat.pl設定スクリプト

############# 共通の設定 ############
$win9x = 0;				# win9xサーバーで使用する場合は1にしてください。
						# この場合、flock(ファイル書き込み時のロック)が使用できません。
						# よって多人数で使用すると不具合が起こる可能性が高いです。

$windows = 0;			# windowsサーバー(9x,2000,xp)で使用する場合は1にしてください。
						# ＜＜windowsサーバーで使用する際の注意事項＞＞
						# $SIG{'ALRM'}が使用できず、サーバーへの接続のタイムアウトが設定できないので、
						# 多人数で使用していると、2chのサーバーが落ちているときに
						# アクセスがたまって一緒に落ちてしまう可能性があります。

$encodemod = 2;			# 0: jcode.plを使用する
						# 1: Encodeモジュールを使用する(文字コード変換速度が向上します。perl 5.8.xでは標準で使用できます。)
						# 2: Encodeモジュールに加え、Drk::Encodeモジュールを使用する(文字コード変換がさらに高速になります。)
						#    これを使用するためには、http://www.drk7.jp/MT/archives/000064.html (高速半角全角ライブラリ  Drk7jp)
						#    からモジュールをダウンロードしてインストールしなければいけません。

############# dat.plを使用する方向けの設定 ############

#dat.pl
$url = 'http://imona.zuzu-service.net/test/';	#設置するURL

############# iMona用サーバーを設置する方向けの設定 ############

#2.cgi
$rawmode = 0;			# 1:rawmodeの使用 0:DAT直読み(2c.plが必要です)
						# 2:rawmodeの使用+板番号9xxxのアクセスを許可(2c.plが必要です)

$writemode = 0;			# 0:$rawmode=0の時に2.cgiで書き込み画面のhtmlを出力をします。
						#   $rawmode=1の時はr.iへリダイレクトします(Location: 〜を出力)
						# 1:書き込み時に常にr.iへリダイレクトします(Location: 〜を出力)
						# 2:書き込み時に常に2.cgiが書き込み画面のhtmlを出力をします。
						#   (この場合、$rawmode=1だと書き込むスレッドのタイトルが表示されません)
						# 2.cgiで書き込み画面を出力するとパケット代が節約でき、
						# r.iが使用できないときでも書けるようになります。

$log = 1;				# 1:アクセスログを保存する。 0:保存しない。

$packmode = 1;			# gzip,zip転送使用時の圧縮方法
						# 0:gzip,zip転送はしない
						# 1:zlib(Compress::Zlib)を使用(推奨) ＜Activeperlに標準で入っているようです。
						# 2:linuxでgzipを使用(zipの場合、一時ファイルの作成が必要です)
						# 3:windows,(FreeBSD?)でgzipを使用(非推奨)。
						#   (zipの場合、一時ファイルの作成が必要です。また、この方法はファイルの排他制御が不完全です。)
						
$tmpf2 = 'tmpfile2.gz';	# $packmode = 2;or$packmode = 3;の時に使用するテンポラリファイルのファイル名


$deldat = 0;			# 1:2.cgiでdatの自動消去を行う(linux鯖用,windows鯖には未対応)
						# cronが使用できる場合は、cronの使用を推奨します。
						# コマンドの例：find directory -type f -atime +2 -exec rm {} \; 
						# この場合、directory以下にある２日間アクセスのないファイルを消去します。

$deldatchk = 'deldatchk.txt';	# datの自動消去に使うファイル名。
								# このファイルは過去にdatの自動消去を行った日時を保存しています。

$deldatst = 3;			# datの自動消去を行う開始時間
$deldatend = 6;			# datの自動消去を行う終了時間
						# $deldatst時〜$deldatend時までの間に自動消去を行います。

$deldatdays = 2;		# 消去するdatファイルのアクセスのない日数。

############# その他の設定(わからないときは変更の必要はありません) ############

#http.pl
$timeout = 2;			# 接続のタイムアウト時間(単位：秒)
$timeout2 = 14;			# 転送のタイムアウト時間(単位：秒)

$usegzip = 1;			# 0:gzip転送を使用しない 1:gzip転送を使用する
						# これを1にすると、Accept-Encoding: gzipを送信します。

$unzipmode = 1;			# gzip転送使用時の解凍方法
						# 1:zlib(Compress::Zlib)を使用(推奨) ＜Activeperlに標準で入っているようです。
						# 2:linuxでgzipを使用(一時ファイルの作成が必要です)
						# 3:windows,(FreeBSD?)でgzipを使用(非推奨)。
						#   (一時ファイルの作成が必要です。また、この方法はファイルの排他制御が不完全です。)

$tmpf = 'tmpfile.gz';	# $unzipmode = 2;or$unzipmode = 3;の時に使用するテンポラリファイルのファイル名


#2c.pl
$mode = 1;				# 動作モード 0:通常 1:外部呼び出しの禁止 2:requireでの呼び出しの禁止

$readdiff = 1;			# 差分読み込み 0:しない 1:する

$brmininterval = 60;	# スレ一覧のキャッシュの最小更新間隔(秒)。前回のキャッシュの更新後、
						# この時間が経過していないと2chから読み込みを行いません。
$brmaxinterval = 86400;	# スレ一覧のキャッシュの最大更新間隔(秒)。前回のキャッシュの更新後、
						# これ以上の時間が経過してもスレ一覧が更新されていない場合、移転された可能性があるのでキャッシュを使用しません。
$thmininterval = 1;		# スレッドのキャッシュの最小更新間隔(秒)。前回のキャッシュの更新後、
						# この時間が経過していないと2chから読み込みを行いません。
$thmaxinterval = 120;	# スレッドのキャッシュの最大更新間隔(秒)。
						# この時間以上経過していると必ず2chから読み込みます。
$thintervalfactor = 100;# スレッドの速度で更新間隔を決めるときの係数
$chkinterval = 10800;	# スレッドの更新チェック間隔(秒)。前回のキャッシュの更新後、
						# この時間が経過していないと2chから読み込みを行っての更新チェックは行いません。

$usebg20 = 1;			# bg20 サーバ(2ch 公式キャッシュサーバ)を使用してデータをダウンロードする。

$dat = '../dat';			# DAT格納場所。DATの格納方法は以下の通りです。
						# \dat ->あらかじめ作成しておいてください。
						#   \AAA　＜板の名称
						#     subject.txt
						#     123456789.dat
						#   \BBB
						#     subject.txt
						#     987654321.dat

$bruseims = 1;			# 1:スレ一覧を取得するときにLast-Modifiedを使用した更新チェックを使用する 0:使用しない

$thuseims = 1;			# 1:スレッドを取得するときにLast-Modifiedを使用した更新チェックを使用する 0:使用しない

$dirpermission = 0744;	# 新しく板の名称のディレクトリを作成する場合のパーミッション

$usenextthsearch = 0;	# 次スレ検出機能を使用する(Text::MeCabが利用可能である必要があります)


1;
